1.AngularJS的表达式只有在页面加载完成后才开始编译

2.多视图，路由，布局模板
我们把index.html作为“布局模板”，其余的局部布局模板根据当前的“路由”被填充进入。
从而形成一个完整视图展现给用户。
AngularJS中的路由是通过$routeProvider来声明，它是$route服务的提供者。这项服务使得控制器、视图模板和当前浏览器的URL可以轻易集成。应用这个特性可以实现深链接，允许我们使用浏览器的历史和书签。

3.依赖注入（Dependency Injection）
当应用引导的时候，AngularJS会创建一个注入器。注入器并不知道自己要注入的服务是做什么的，实际上除非它在模块定义的时候被配置过，否则是不知道服务存在的。
注入器的唯一职责就是载入指定的服务模块。并在这些模块中注册所有定义服务的提供者。并且当需要时给一个指定的函数注入依赖（服务）。使用lazy实例化的实现方式（需要时在加载）
服务提供者就是对外提供API接口的对象，比如说$routeProvider.

4.$route服务通常和ngView指令一起使用。ngView指令的角色是为当前路由把对应的视图模板载入到布局模板当中。

5.要注意对应的控制器的绑定要到对应的控制器的布局模板当中4.$route服务通常和ngView指令一起使用。ngView指令的角色是为当前路由把对应的视图模板载入到布局模板当中。

5.要注意对应的控制器的绑定要到对应的控制器的布局模板当中4.$route服务通常和ngView指令一起使用。ngView指令的角色是为当前路由把对应的视图模板载入到布局模板当中。

5.要注意对应的控制器的绑定要到对应的控制器的布局模板当中4.$route服务通常和ngView指令一起使用。ngView指令的角色是为当前路由把对应的视图模板载入到布局模板当中。

5.要注意对应的控制器的绑定要到对应的控制器的布局模板当中
